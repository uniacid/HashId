<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
        https://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="pgs_hash_id.decorator.router"
                 class="Pgs\HashIdBundle\Decorator\RouterDecorator"
                 public="false"
                 decorates="router">
            <argument type="service" id="router.default"/>
            <argument type="service" id="pgs_hash_id.parameters_processor.factory.encode"/>
        </service>
        <service id="pgs_hash_id.reflection_provider"
                 class="Pgs\HashIdBundle\Reflection\ReflectionProvider"
                 public="false"/>
        
        <!-- Compatibility Layer for dual annotation/attribute support -->
        <service id="pgs_hash_id.compatibility_layer"
                 class="Pgs\HashIdBundle\Service\CompatibilityLayer"
                 public="false">
            <argument>true</argument> <!-- deprecationWarningsEnabled -->
            <argument>true</argument> <!-- preferAttributes -->
        </service>
        
        <!-- Legacy annotation provider (kept for backward compatibility) -->
        <service id="pgs_hash_id.annotation_provider"
                 class="Pgs\HashIdBundle\AnnotationProvider\AnnotationProvider"
                 public="false">
            <argument type="service" id="annotation_reader"/>
            <argument type="service" id="pgs_hash_id.reflection_provider"/>
        </service>
        
        <!-- New attribute provider supporting both annotations and attributes -->
        <service id="pgs_hash_id.attribute_provider"
                 class="Pgs\HashIdBundle\AnnotationProvider\AttributeProvider"
                 public="false">
            <argument type="service" id="pgs_hash_id.compatibility_layer"/>
            <argument type="service" id="pgs_hash_id.reflection_provider"/>
        </service>
        <service id="pgs_hash_id.parameters_processor.abstract"
                 class="Pgs\HashIdBundle\ParametersProcessor\AbstractParametersProcessor"
                 abstract="true"
                 public="false">
            <argument type="service" id="pgs_hash_id.converter"/>
        </service>
        <service id="pgs_hash_id.parameters_processor.encode"
                 class="Pgs\HashIdBundle\ParametersProcessor\Encode"
                 parent="pgs_hash_id.parameters_processor.abstract"
                 public="false"/>
        <service id="pgs_hash_id.parameters_processor.decode"
                 class="Pgs\HashIdBundle\ParametersProcessor\Decode"
                 parent="pgs_hash_id.parameters_processor.abstract"
                 public="false"/>
        <service id="pgs_hash_id.parameters_processor.no_op"
                 class="Pgs\HashIdBundle\ParametersProcessor\NoOp"
                 public="false"/>
        <service id="pgs_hash_id.parameters_processor.factory.abstract"
                 class="Pgs\HashIdBundle\ParametersProcessor\Factory\AbstractParametersProcessorFactory"
                 abstract="true"
                 public="false">
            <argument type="service" id="pgs_hash_id.attribute_provider"/>
            <argument type="service" id="pgs_hash_id.parameters_processor.no_op"/>
        </service>
        <service id="pgs_hash_id.parameters_processor.factory.encode"
                 class="Pgs\HashIdBundle\ParametersProcessor\Factory\EncodeParametersProcessorFactory"
                 parent="pgs_hash_id.parameters_processor.factory.abstract"
                 public="false">
            <argument type="service" id="pgs_hash_id.parameters_processor.encode"/>
        </service>
        <service id="pgs_hash_id.parameters_processor.factory.decode"
                 class="Pgs\HashIdBundle\ParametersProcessor\Factory\DecodeParametersProcessorFactory"
                 parent="pgs_hash_id.parameters_processor.factory.abstract"
                 public="false">
            <argument type="service" id="pgs_hash_id.parameters_processor.decode"/>
        </service>
        <service id="pgs_hash_id.service.decode_controller_parameters"
                 class="Pgs\HashIdBundle\Service\DecodeControllerParameters"
                 public="false">
            <argument type="service" id="pgs_hash_id.parameters_processor.factory.decode"/>
        </service>
        <service id="pgs_hash_id.event_subscriber.decode_controller_parameters"
                 class="Pgs\HashIdBundle\EventSubscriber\DecodeControllerParametersSubscriber">
            <argument type="service" id="pgs_hash_id.service.decode_controller_parameters"/>
            <tag name="kernel.event_subscriber"/>
        </service>
    </services>
</container>