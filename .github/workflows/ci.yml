name: CI

on:
  push:
    branches: [ "master", "dev/modernization-v4", "rector-setup-foundation" ]
  pull_request:
    branches: [ "master", "dev/modernization-v4" ]

env:
  COMPOSER_ALLOW_SUPERUSER: 1
  COMPOSER_CACHE_DIR: /tmp/composer-cache

jobs:
  tests:
    name: "Tests PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}"
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3']
        symfony: ['6.4.*', '7.0.*']
        exclude:
          # Exclude combinations that aren't supported yet
          - php: '8.1'
            symfony: '7.0.*'
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          tools: composer:v2
          extensions: json, mbstring

      - name: "Cache Composer packages"
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: "php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-"

      - name: "Update Composer"
        run: composer self-update

      - name: "Install dependencies"
        run: |
          composer require --no-update --dev symfony/framework-bundle:${{ matrix.symfony }}
          composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader
          
      - name: "Validate composer.json"
        run: composer validate --strict

      - name: "Check PSR-4 mapping"
        run: composer dump-autoload --optimize --strict-psr

      - name: "Run PHPUnit Tests"
        run: vendor/bin/phpunit --configuration=phpunit.xml.dist --coverage-clover=coverage.xml --coverage-text

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  quality-checks:
    name: "Code Quality Checks"
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          coverage: none
          tools: composer:v2

      - name: "Cache Composer packages"
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: "quality-php-8.3-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "quality-php-8.3-"

      - name: "Install dependencies"
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: "PHPStan Analysis"
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon.dist --error-format=github --no-progress

      - name: "PHP CS Fixer Check"
        run: vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --dry-run --diff --verbose

      - name: "Check for PHP syntax errors"
        run: |
          find src tests -name "*.php" -print0 | xargs -0 -n1 php -l

      - name: "Security Check"
        uses: symfonycorp/security-checker-action@v5

  backward-compatibility:
    name: "Backward Compatibility Check"
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          coverage: none
          tools: composer:v2

      - name: "Install dependencies"
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: "Check backward compatibility"
        run: |
          if [ -d vendor/roave/backward-compatibility-check ]; then
            vendor/bin/roave-backward-compatibility-check --format=github-actions
          else
            echo "BC check skipped - roave/backward-compatibility-check not installed"
          fi

  mutation-testing:
    name: "Mutation Testing"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          coverage: pcov
          tools: composer:v2

      - name: "Install dependencies"
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: "Run Infection Mutation Testing"
        run: |
          if [ -f vendor/bin/infection ]; then
            vendor/bin/infection --configuration=infection.json.dist --min-msi=80 --min-covered-msi=90 --threads=4
          else
            echo "Mutation testing skipped - infection/infection not installed"
          fi
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}